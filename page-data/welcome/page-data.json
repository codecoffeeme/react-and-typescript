{
    "componentChunkName": "component---src-templates-lesson-template-js",
    "path": "/welcome",
    "result": {"data":{"markdownRemark":{"html":"<h2 id=\"who-is-this-for\" style=\"position:relative;\"><a href=\"#who-is-this-for\" aria-label=\"who is this for permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Who Is This For?</h2>\n<p>This workshop is for anyone who is interested in learning how to use TypeScript with React. While there is no expectation that you're familiar with TypeScript, we're not going to be covering the basics of TypeScript directly. Instead, we'll be learning it within the context of building simple components in React. If you're familiar with building React applications using TypeScript already, some of the content that we're going to cover is going to be things you already know. That said, I have a suspicion that you'll pick up a few tips and tricks along the way. I also hope that it will reinforce the fundamentals for you.</p>\n<h2 id=\"code-examples-and-project-starters\" style=\"position:relative;\"><a href=\"#code-examples-and-project-starters\" aria-label=\"code examples and project starters permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Code Examples and Project Starters</h2>\n<p>Clone <a href=\"https://github.com/stevekinney/react-and-typescript-projects\">this repository</a> and run <code class=\"language-text\">npx recursive-install</code> to install all of the dependencies.</p>\n<h2 id=\"your-set-up\" style=\"position:relative;\"><a href=\"#your-set-up\" aria-label=\"your set up permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Your Set Up</h2>\n<p>You don't need a lot to get rocking and/or rolling with this course. In fact, most of the examples and exercises have versions that are hosted on <a href=\"https://codesandbox.io\">CodeSandbox</a>. So, you probably only need a browsers and if you're reading this, you likely already have one of those.</p>\n<p>But, let's assume that you also want to work on some of this stuff locally as well. In that case, you're going to want to have the following installed:</p>\n<ul>\n<li><a href=\"https://nodejs.org\">NodeJS</a>. This course was tested using the latest LTS release of Node at the time (e.g. 14), but it honestly shouldn't matter much. I recommend using <a href=\"https://github.com/nvm-sh/nvm\">nvm</a> to manage which version of Node you're using.</li>\n<li>You're going to need an editor of some kind. I recommend using <a href=\"https://code.visualstudio.com/\">Visual Studio Code</a>. But, you likely already have opinions on this topic.</li>\n</ul>\n<h2 id=\"my-set-up\" style=\"position:relative;\"><a href=\"#my-set-up\" aria-label=\"my set up permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>My Set Up</h2>\n<p>In case you're morbidly curious about what I'm using as we spend the next several hours together, here is a quick rundown of my setup.</p>\n<ul>\n<li><strong>Font</strong>: <a href=\"https://github.com/tonsky/FiraCode\">Fira Code</a>. It's basically a version of Mozilla's <a href=\"https://fonts.google.com/specimen/Fira+Mono\">Fira Mono</a>, but with fancy ligatures.</li>\n<li><strong>Theme</strong>: <a href=\"https://marketplace.visualstudio.com/items?itemName=ms-vscode.Theme-TomorrowKit\">Tomorrow and Tomorrow Night</a>. Why? Because I've always used it and I'm very lazy.</li>\n<li><strong>Plugins</strong>: I don't install a lot of plugins, but here are some of the ones that I like: <a href=\"https://marketplace.visualstudio.com/items?itemName=steoates.autoimport\">Auto Import</a>, <a href=\"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode\">Prettier</a>.</li>\n</ul>\n<h2 id=\"who-am-i\" style=\"position:relative;\"><a href=\"#who-am-i\" aria-label=\"who am i permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Who am I?</h2>\n<p>Hello! My name is <a href=\"https://stevekinney.net\">Steve Kinney</a> and I'm the front-end architect at <a href=\"https://twilio.com\">Twilio</a>â€”we're the company that sends text messages and emails and whatnot. I help lead all of our front-end and user-interface efforts at the company. Pretty much everything we do is built on top of React and uses TypeScript.</p>\n<p>In the past, I started the front-end engineering program at the <a href=\"https://turing.io\">Turing School of Software and Design</a>, started a JavaScript conference called <a href=\"https://dinosaurjs.org\">DinosaurJS</a>, and wrote a book on <a href=\"https://bit.ly/electronjs\">Electron</a>.</p>\n<p>I live in Denver, Colorado. If you are so inclined to find me on the Internet, you may do so at the following locations:</p>\n<ul>\n<li><a href=\"https://twitter.com/stevekinney\">Twitter</a></li>\n<li><a href=\"https://github.com/stevekinney\">Github</a></li>\n<li><a href=\"https://instagram.com/stevekinney\">Instagram</a></li>\n</ul>","frontmatter":{"path":"/welcome","title":"Welcome and Introduction","order":"1A","section":"Introduction","description":"Getting started and an introduction to TypeScript && React Workshop"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"order":"5D","path":"/refactoring-color-inputs","title":"Refactoring the Color Inputs"}}},{"node":{"frontmatter":{"order":"9G","path":"/create-context","title":"Solving for Context API Edge Cases"}}},{"node":{"frontmatter":{"order":"9F","path":"/dependent-props","title":"Demanding Props Based on Other Props"}}},{"node":{"frontmatter":{"order":"9A","path":"/limiting-props","title":"Limiting Props a Component Can Take Based on Other Props"}}},{"node":{"frontmatter":{"order":"9D","path":"/polymorphic-components-solution","title":"Polymorphic Components (Solution)"}}},{"node":{"frontmatter":{"order":"9C","path":"/polymorphic-components-exercise","title":"Polymorphic Components (Exercise)"}}},{"node":{"frontmatter":{"order":"9B","path":"/polymorphic-components","title":"Polymorphic Components with TypeScript"}}},{"node":{"frontmatter":{"order":"6C","path":"/utility-types-character-cards","title":"Refactoring the Character Cards with Utility Types"}}},{"node":{"frontmatter":{"order":"3D","path":"/class-based-components","title":"Typing Class-based Components"}}},{"node":{"frontmatter":{"order":"10C","path":"/sandboxes","title":"Code Sandboxes"}}},{"node":{"frontmatter":{"order":"2C","path":"/commonly-used-props","title":"Commonly-Used Props"}}},{"node":{"frontmatter":{"order":"5B","path":"/context-api","title":"The Context API"}}},{"node":{"frontmatter":{"order":"5C","path":"/context-with-reducer","title":"The Context API with State Management"}}},{"node":{"frontmatter":{"order":"3F","path":"/dog-facts","title":"Exercise: Dog Facts"}}},{"node":{"frontmatter":{"order":"3E","path":"/forms-and-events","title":"Forms and Events (Exercise)"}}},{"node":{"frontmatter":{"order":"9E","path":"/overloads","title":"Function Overloads"}}},{"node":{"frontmatter":{"order":"6A","path":"/generics","title":"Working with Generics"}}},{"node":{"frontmatter":{"order":"8B","path":"/higher-order-components-exercise","title":"Higher Order Components with TypeScript (Exercise)"}}},{"node":{"frontmatter":{"order":"8C","path":"/higher-order-components-solution","title":"Higher Order Components (Solution)"}}},{"node":{"frontmatter":{"order":"8A","path":"/higher-order-components","title":"Higher Order Components with TypeScript"}}},{"node":{"frontmatter":{"order":"10A","path":"/migration","title":"Migrating From JavaScript"}}},{"node":{"frontmatter":{"order":"5A","path":"/passing-dipatch","title":"Prologue: Passing Dispatch as a Props"}}},{"node":{"frontmatter":{"order":"4B","path":"/reducers-exercise","title":"Reducers (Exercise)"}}},{"node":{"frontmatter":{"order":"4C","path":"/reducers-solution","title":"Reducers (Solution)"}}},{"node":{"frontmatter":{"order":"4A","path":"/reducers","title":"Typing Reducers"}}},{"node":{"frontmatter":{"order":"2B","path":"/refactoring-from-proptypes","title":"Refactoring from PropTypes"}}},{"node":{"frontmatter":{"order":"1B","path":"/sales-pitch","title":"Why Use TypeScript? (A Sales Pitch)"}}},{"node":{"frontmatter":{"order":"2A","path":"/the-most-basic-example","title":"The Very Basics"}}},{"node":{"frontmatter":{"order":"6G","path":"/type-template-literals-refactoring-adjustment-actions","title":"Type Template Literals: Refactoring Our Color Adjustment Actions"}}},{"node":{"frontmatter":{"order":"6F","path":"/type-template-literals","title":"Type Template Literals"}}},{"node":{"frontmatter":{"order":"10B","path":"/types-versus-interfaces","title":"Types Versus Interfaces"}}},{"node":{"frontmatter":{"order":"2E","path":"/typing-children-solution","title":"Typing Children (Solution)"}}},{"node":{"frontmatter":{"order":"2D","path":"/typing-children","title":"Typing Children"}}},{"node":{"frontmatter":{"order":"2F","path":"/typing-styling","title":"Typing Styling"}}},{"node":{"frontmatter":{"order":"3C","path":"/use-effect","title":"useEffect"}}},{"node":{"frontmatter":{"order":"3B","path":"/use-state-no-default-value","title":"Setting State without a Default Value"}}},{"node":{"frontmatter":{"order":"3A","path":"/use-state","title":"useState Hook"}}},{"node":{"frontmatter":{"order":"6D","path":"/utility-types-exercise","title":"Utility Types (Exercise)"}}},{"node":{"frontmatter":{"order":"6E","path":"/utility-types-solution","title":"Utility Types (Solution)"}}},{"node":{"frontmatter":{"order":"6B","path":"/utility-types","title":"A Tour of Utility Types in React"}}},{"node":{"frontmatter":{"order":"1A","path":"/welcome","title":"Welcome and Introduction"}}}]}},"pageContext":{}},
    "staticQueryHashes": ["2959687377"]}