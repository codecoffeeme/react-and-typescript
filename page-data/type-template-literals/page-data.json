{
    "componentChunkName": "component---src-templates-lesson-template-js",
    "path": "/type-template-literals",
    "result": {"data":{"markdownRemark":{"html":"<p>Start with <a href=\"https://www.typescriptlang.org/play?jsx=1&#x26;ssl=14&#x26;ssc=1&#x26;pln=15&#x26;pc=1#code/C4TwDgpgBAwgFgQwE4IMbAkmAbBBnPKAXigHIB3ZJAeyVKgB8ywFcATASwDt6mKOAXsja8yqbJg6pSAbgBQc0JCgAZBOXgJqhEqVzkAZgFdso0lwhHgKU4zGJqwKbMXhoAcWrU2AUQBuHNjEZADmXiJ25pbWrGYQAabyrsqaKOiYwQDeclBQXAgAthAAXFB41twh8rlgNAYQBBzUXKWpaBhYuATVUKwcIVxFXMCl5UiVMlAA9FNQAOrQlMNQwNRQqIgh0MBwHHgAhHIAvgqozeVlGH4lsIhpHVk5eYU3pADKVxCkADRPtdT1RrNUr8IRIES-XJ9AZDEb2LROVAAWjC3h+xxkQA\">this sandbox</a>.</p>\n<h2 id=\"initial-state\" style=\"position:relative;\"><a href=\"#initial-state\" aria-label=\"initial state permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Initial State</h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">CharacterClass</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"warror\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"paladin\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"wizard\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"cleric\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">LawChaos</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"lawful\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"neutral\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"chaotic\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">GoodEvil</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"good\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"neutral\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"evil\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Character</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  profession<span class=\"token operator\">:</span> CharacterClass<span class=\"token punctuation\">;</span>\n  alignment<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// We want to chage this!</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> steve<span class=\"token operator\">:</span> Character <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Steve\"</span><span class=\"token punctuation\">,</span>\n  profession<span class=\"token operator\">:</span> <span class=\"token string\">\"wizard\"</span><span class=\"token punctuation\">,</span>\n  alignment<span class=\"token operator\">:</span> <span class=\"token string\">\"chaotic-good\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"solution\" style=\"position:relative;\"><a href=\"#solution\" aria-label=\"solution permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Solution</h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">CharacterClass</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"warror\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"paladin\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"wizard\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"cleric\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">LawChaos</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"lawful\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"neutral\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"chaotic\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">GoodEvil</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"good\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"neutral\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"evil\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Alignment</span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>LawChaos<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>GoodEvil<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Character</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  profession<span class=\"token operator\">:</span> CharacterClass<span class=\"token punctuation\">;</span>\n  alignment<span class=\"token operator\">:</span> Alignment<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> steve<span class=\"token operator\">:</span> Character <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Steve\"</span><span class=\"token punctuation\">,</span>\n  profession<span class=\"token operator\">:</span> <span class=\"token string\">\"wizard\"</span><span class=\"token punctuation\">,</span>\n  alignment<span class=\"token operator\">:</span> <span class=\"token string\">\"chaotic-good\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"your-turn\" style=\"position:relative;\"><a href=\"#your-turn\" aria-label=\"your turn permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Your Turn</h2>\n<p>Visit <a href=\"https://www.typescriptlang.org/play?jsx=1&#x26;ssl=30&#x26;ssc=1&#x26;pln=31&#x26;pc=1#code/C4TwDgpgBAahBOwCWBjAhgGwIIaQcwDsBbCA4KAXigHJgB7MaqAHxpVOASdeoCM7g9ItQDcAKFCQoACTrwkALzoFMOfMQ6UaGCADNg3Nhy4sa8vAAsD4ieGgAhOgA8tAbzFQoTgFxQCAVyJeBHFPEF8AoJCPKEx1EjJfAGdgeQI8ESgAeiyoABkIAySoIjQAa2hgCyRi4MEEADoxAF8bFGUU2N9HFyp3Tx8oAEYABgAaGPDh8Zi4wgTgX1oGAFp2Mi4J1rExdoJO3m7nNxjBgCYZsN8Lic85jUSafkE6IhXzK2otto7yJIs6P4MAATezwCDlI69KD9LzXS5QKY3Wa4eYcJY6fTvfCfb47Padf6AkFgiFlLDAABiSHgKXs-mAAFEAG4cfyYDAgADqcjKUJOA18owRU2Ft1iqIeiyMG3gXxaIiAA\">this sandbox</a>.</p>\n<p>Make a template literal type that eventually breaks the second two examples.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">VerticalAlignment</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"top\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"center\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"bottom\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">HorizonalAlignment</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"left\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"center\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"right\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Box</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  x<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  y<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  alignment<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Let's make this better.</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> a<span class=\"token operator\">:</span> Box <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  x<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n  y<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n  alignment<span class=\"token operator\">:</span> <span class=\"token string\">\"top-center\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> b<span class=\"token operator\">:</span> Box <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  x<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n  y<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n  alignment<span class=\"token operator\">:</span> <span class=\"token string\">\"bottom-right\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> shouldBreak<span class=\"token operator\">:</span> Box <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  x<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n  y<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n  alignment<span class=\"token operator\">:</span> <span class=\"token string\">\"left-right\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> shouldBreakAtFirstButEventuallyWork<span class=\"token operator\">:</span> Box <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  x<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n  y<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n  alignment<span class=\"token operator\">:</span> <span class=\"token string\">\"center\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"extension\" style=\"position:relative;\"><a href=\"#extension\" aria-label=\"extension permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Extension</h3>\n<ul>\n<li>Could we get 'center' to work instead of 'center-center'?</li>\n<li>And what if we wanted to get rid of 'center-center'?</li>\n</ul>\n<h3 id=\"solutions\" style=\"position:relative;\"><a href=\"#solutions\" aria-label=\"solutions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Solutions</h3>\n<ul>\n<li><a href=\"https://www.typescriptlang.org/play?jsx=1#code/C4TwDgpgBAahBOwCWBjAhgGwIIaQcwDsBbCA4KAXigHJgB7MaqAHxpVOASdeoCM7g9ItQDcAKFCQoACTrwkALzoFMOfMQ6UaGCADNg3Nhy4sa8vAAsD4ieGgAhOgA8tAbzFQoTgFxQCAVyJeBHFPEF8AoJCPKEx1EjJfAAMAElc4RFRVXEIE4ABfAFo02XklFWwcjTJ8pPF8mxRlAGdyNF9HFyp3Tx8oAEYABgAaGPCBkZi43I5fWgZC9jIuUYaxMSaCVqheDuc3GL6AJkmw3xPRz2nq4Dn+QToiQvMralXGlvJmizp-DAATezwCBoADWey6UB6XnOpyg4wuUyqeTmOn0z3wr3e60222+vwBQJBoKwwAAYkh4K17P5gABRABuHH8mAwIAA6nJwVBOgder4hnDxoLLrFkbMjMt4G8xA0gA\">Basic implementation</a>.</li>\n<li><a href=\"https://www.typescriptlang.org/play?jsx=1&#x26;ssl=4&#x26;ssc=1&#x26;pln=6&#x26;pc=1#code/C4TwDgpgBAahBOwCWBjAhgGwIIaQcwDsBbCA4KAXigHJgB7MaqAHxpVOASdeoCM7g9ItQDcAKFCQoACTrwkALzoFMOfMQ6UaGCADNg3Nhy4sa8vAAsD4ieGhrCJMloCiADxQYArgBMIAHgADABIAbzhEVFVcRw4AXwBaMNl5JRVsGI0yOMDTanYyLgAaI0L4BILOeGoAPhtJaAAhOjctULEoKDcALigCLyJeBHFOkF7+weGOqEx1J2BehyzgcTibFGUAZ3I0XubWqnbOnqgARgAGIumxs8vp2diyXtoGCuNqq7WxMQ2CbaheHsWm1picAEx3Ua9CFXToPZbPfiCOhEBLmKzUT7rLbkTYWOheDA+RrwCBoADWQIOUCOXWhkKgNxh90y82elQQbzKmLEXx+OKgeIJRJJZPJWGAADEkPBto0vMAXAA3DheTAYEAAdTklKg+xBx16FwZN2NsJmrI47PePLWQA\">With Extension</a>.</li>\n</ul>","frontmatter":{"path":"/type-template-literals","title":"Type Template Literals","order":"6F","section":"Just Enough TypeScript","description":"Using type template liberals to dynamically create types."}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"order":"5D","path":"/refactoring-color-inputs","title":"Refactoring the Color Inputs"}}},{"node":{"frontmatter":{"order":"9G","path":"/create-context","title":"Solving for Context API Edge Cases"}}},{"node":{"frontmatter":{"order":"9F","path":"/dependent-props","title":"Demanding Props Based on Other Props"}}},{"node":{"frontmatter":{"order":"9A","path":"/limiting-props","title":"Limiting Props a Component Can Take Based on Other Props"}}},{"node":{"frontmatter":{"order":"9D","path":"/polymorphic-components-solution","title":"Polymorphic Components (Solution)"}}},{"node":{"frontmatter":{"order":"9C","path":"/polymorphic-components-exercise","title":"Polymorphic Components (Exercise)"}}},{"node":{"frontmatter":{"order":"9B","path":"/polymorphic-components","title":"Polymorphic Components with TypeScript"}}},{"node":{"frontmatter":{"order":"6C","path":"/utility-types-character-cards","title":"Refactoring the Character Cards with Utility Types"}}},{"node":{"frontmatter":{"order":"3D","path":"/class-based-components","title":"Typing Class-based Components"}}},{"node":{"frontmatter":{"order":"10C","path":"/sandboxes","title":"Code Sandboxes"}}},{"node":{"frontmatter":{"order":"2C","path":"/commonly-used-props","title":"Commonly-Used Props"}}},{"node":{"frontmatter":{"order":"5B","path":"/context-api","title":"The Context API"}}},{"node":{"frontmatter":{"order":"5C","path":"/context-with-reducer","title":"The Context API with State Management"}}},{"node":{"frontmatter":{"order":"3F","path":"/dog-facts","title":"Exercise: Dog Facts"}}},{"node":{"frontmatter":{"order":"3E","path":"/forms-and-events","title":"Forms and Events (Exercise)"}}},{"node":{"frontmatter":{"order":"9E","path":"/overloads","title":"Function Overloads"}}},{"node":{"frontmatter":{"order":"6A","path":"/generics","title":"Working with Generics"}}},{"node":{"frontmatter":{"order":"8B","path":"/higher-order-components-exercise","title":"Higher Order Components with TypeScript (Exercise)"}}},{"node":{"frontmatter":{"order":"8C","path":"/higher-order-components-solution","title":"Higher Order Components (Solution)"}}},{"node":{"frontmatter":{"order":"8A","path":"/higher-order-components","title":"Higher Order Components with TypeScript"}}},{"node":{"frontmatter":{"order":"10A","path":"/migration","title":"Migrating From JavaScript"}}},{"node":{"frontmatter":{"order":"5A","path":"/passing-dipatch","title":"Prologue: Passing Dispatch as a Props"}}},{"node":{"frontmatter":{"order":"4B","path":"/reducers-exercise","title":"Reducers (Exercise)"}}},{"node":{"frontmatter":{"order":"4C","path":"/reducers-solution","title":"Reducers (Solution)"}}},{"node":{"frontmatter":{"order":"4A","path":"/reducers","title":"Typing Reducers"}}},{"node":{"frontmatter":{"order":"2B","path":"/refactoring-from-proptypes","title":"Refactoring from PropTypes"}}},{"node":{"frontmatter":{"order":"1B","path":"/sales-pitch","title":"Why Use TypeScript? (A Sales Pitch)"}}},{"node":{"frontmatter":{"order":"2A","path":"/the-most-basic-example","title":"The Very Basics"}}},{"node":{"frontmatter":{"order":"6G","path":"/type-template-literals-refactoring-adjustment-actions","title":"Type Template Literals: Refactoring Our Color Adjustment Actions"}}},{"node":{"frontmatter":{"order":"6F","path":"/type-template-literals","title":"Type Template Literals"}}},{"node":{"frontmatter":{"order":"10B","path":"/types-versus-interfaces","title":"Types Versus Interfaces"}}},{"node":{"frontmatter":{"order":"2E","path":"/typing-children-solution","title":"Typing Children (Solution)"}}},{"node":{"frontmatter":{"order":"2D","path":"/typing-children","title":"Typing Children"}}},{"node":{"frontmatter":{"order":"2F","path":"/typing-styling","title":"Typing Styling"}}},{"node":{"frontmatter":{"order":"3C","path":"/use-effect","title":"useEffect"}}},{"node":{"frontmatter":{"order":"3B","path":"/use-state-no-default-value","title":"Setting State without a Default Value"}}},{"node":{"frontmatter":{"order":"3A","path":"/use-state","title":"useState Hook"}}},{"node":{"frontmatter":{"order":"6D","path":"/utility-types-exercise","title":"Utility Types (Exercise)"}}},{"node":{"frontmatter":{"order":"6E","path":"/utility-types-solution","title":"Utility Types (Solution)"}}},{"node":{"frontmatter":{"order":"6B","path":"/utility-types","title":"A Tour of Utility Types in React"}}},{"node":{"frontmatter":{"order":"1A","path":"/welcome","title":"Welcome and Introduction"}}}]}},"pageContext":{}},
    "staticQueryHashes": ["2959687377"]}